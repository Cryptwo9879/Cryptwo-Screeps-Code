{"map":"{\"version\":3,\"file\":\"main.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/main.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAC;AAEhD,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AACjD,OAAO,EAAE,WAAW,EAAE,MAAM,yBAAyB,CAAC;AACtD,MAAM,QAAQ,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC7C,6GAA6G;AAC7G,uGAAuG;AACvG,QAAQ,CAAC,MAAM,EAAE,CAAC;AAClB,MAAM,CAAC,MAAM,IAAI,GAAG,WAAW,CAAC,QAAQ,CAAC,GAAG,EAAE;IAC1C,QAAQ,CAAC,IAAI,CAAC;QACd,OAAO,CAAC,GAAG,CAAC,wBAAwB,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;QAEjD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACrC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,SAAS,EAAE;gBAC/B,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aACzB;QACH,CAAC,CAAC,CAAA;QACF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAClC,kCAAkC;YACpC,2BAA2B;QAC3B,CAAC,CAAC,CAAA;QAEF,sDAAsD;QACtD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACzC,iCAAiC;QACnC,CAAC,CAAC,CAAA;QACF,WAAW,CAAC,GAAG,EAAE,CAAA;QACjB,WAAW,CAAC,WAAW,EAAE,CAAA;QACzB,kBAAkB;QAClB,IAAI,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,IAAI,eAAe,CAAC,CAAC;QAChF,iBAAiB;QACjB,KAAK,IAAI,KAAK,IAAI,MAAM,EAAE;YACxB,kBAAkB;YAClB,cAAc,CAAC,MAAM,EAAE,CAAC;SACzB;IAED,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC\"}","code":"import { ErrorMapper } from \"utils/ErrorMapper\";\r\nimport { StructureTower } from \"prototype.tower\";\r\nimport { taskManager } from \"TaskManager/taskManager\";\r\nconst profiler = require('screeps-profiler');\r\n// When compiling TS to JS and bundling with rollup, the line numbers and file names in error messages change\r\n// This utility uses source maps to get the line numbers and file names of the original, TS source code\r\nprofiler.enable();\r\nexport const loop = ErrorMapper.wrapLoop(() => {\r\n    profiler.wrap(function () {\r\n        console.log(`Current game tick is ${Game.time}`);\r\n        Object.keys(Memory.creeps).forEach(i => {\r\n            if (Game.creeps[i] == undefined) {\r\n                delete Memory.creeps[i];\r\n            }\r\n        });\r\n        Object.keys(Game.flags).forEach(i => {\r\n            //var currentFlag = Game.flags[i];\r\n            //  currentFlag.flagTick();\r\n        });\r\n        //Loop through all rooms your creeps/structures are in\r\n        Object.keys(Game.rooms).forEach(roomName => {\r\n            //Game.rooms[roomName].runLogic()\r\n        });\r\n        taskManager.run();\r\n        taskManager.assignTasks();\r\n        // find all towers\r\n        var towers = _.filter(Game.structures, s => s.structureType == STRUCTURE_TOWER);\r\n        // for each tower\r\n        for (let tower of towers) {\r\n            // run tower logic\r\n            StructureTower.defend();\r\n        }\r\n    });\r\n});\r\n//# sourceMappingURL=main.js.map"}
