{"map":"{\"version\":3,\"file\":\"tasks.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/TaskManager/tasks.ts\"],\"names\":[],\"mappings\":\"AACA,MAAM;IAEJ,MAAM,CAAC,WAAW,CAAC,KAAU;QAC3B,KAAK,CAAC,UAAU,EAAE,CAAC;QACnB,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,aAAa,EAAE;YAC7C,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;SAC/B;QACD,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;YAC3B,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;SAChC;QACD,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,aAAa,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,IAAI,OAAO,EAAE;YAChF,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;SAC5B;QACD,IAAI,KAAK,CAAC,aAAa,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,EAAE;YAC9D,IAAI,KAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,gBAAgB,EAAE;gBACtE,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACvC;SACF;IACH,CAAC;IAED,MAAM,CAAC,UAAU,CAAC,KAAS;QACzB,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;QAEvB,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,aAAa,EAAE;YAC7C,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;SAC/B;QACD,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,IAAI,OAAO,EAAE;YACnC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;SAC5B;QACD,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;YAC3B,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;SAChC;QACD,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,EAAE;YAC7D,IAAI,SAAS,GAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACzE,IAAI,SAAS,CAAC,WAAW,EAAE,IAAI,KAAK,IAAI,SAAS,CAAC,WAAW,EAAE,IAAI,IAAI,EAAE;gBACvE,KAAK,CAAC,SAAS,EAAE,CAAC;aACnB;iBACI,IAAI,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,gBAAgB,IAAI,SAAS,IAAI,SAAS,EAAE;gBAC9E,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;aAC3B;SAEF;IACH,CAAC;IAED,MAAM,CAAC,WAAW,CAAC,KAAU;QAE3B,KAAK,CAAC,UAAU,EAAE,CAAC;QACnB,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;QACrE,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;YAC3B,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;SAC/B;QACD,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,IAAI,OAAO,EAAE;YACnC,KAAK,CAAC,kBAAkB,EAAE,CAAA;SAC3B;QACD,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,aAAa,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,EAAE;YAC/E,IAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,gBAAgB,EAAE;gBAChD,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAA;aAC3B;SACD;aAAM,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,aAAa,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,EAAE;YACvF,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAA;SAC/B;IAEL,CAAC;IAEC,MAAM,CAAC,SAAS,CAAC,KAAU;QACzB,KAAK,CAAC,UAAU,EAAE,CAAC;QACnB,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,IAAI,OAAO,EAAE;YACnC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;SAC5B;aAAM,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,EAAE;YACzC,IAAK,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAA;YAC/C,IAAI,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAElD,IAAI,WAAW,IAAI,IAAI,EAAE;gBACvB,IAAI,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,gBAAgB,EAAE;oBAChD,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAA;iBAC5B;aACF;iBAAK;gBACJ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,gDAAgD,CAAC,CAAC;gBAC3E,KAAK,CAAC,SAAS,EAAE,CAAC;aACnB;SACF;QACD,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,aAAa,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,IAAI,OAAO,EAAE;YACjF,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;SAC/B;aAAM,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,EAAC;YACnE,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;SAChC;IACH,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,KAAU;QACzB,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;QAC1B,IAAG,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,SAAS,EAAC;YAC7D,IAAI,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAA;YAC/C,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,IAAI,OAAO,EAAE;gBACnC,KAAK,CAAC,mBAAmB,EAAE,CAAA;aAC5B;YACD,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,aAAa,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,IAAI,OAAO,EAAE;gBAChF,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;aAC/B;YACD,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,EAAE;gBAC7D,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;aAChC;YACD,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,EAAE;gBAClC,KAAK,CAAC,kBAAkB,EAAE,CAAA;aAC3B;SACF;IACD,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,KAAU;QACzB,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;QAEvB,IAAG,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,SAAS,EAAC;YAC7D,IAAI,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAA;YAChD,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAA;YACjD,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAA;YACzC,IAAI,aAAa,GAAO,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAEtD,IAAI,aAAa,IAAI,IAAI,EAAE;gBACzB,IAAG,KAAK,CAAC,GAAG,IAAI,aAAa,CAAC,GAAG,EAAE;oBACjC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAA;iBAC9B;gBACD,IAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,gBAAgB,EAAE;oBAC5C,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAA;iBAC9B;aACF;SACF;IACH,CAAC;IAED,MAAM,CAAC,UAAU,CAAC,KAAU;QAC1B,KAAK,CAAC,UAAU,EAAE,CAAC;QACnB,IAAG,KAAK,CAAC,MAAM,CAAC,OAAO,IAAI,OAAO,EAAE;YAClC,IAAK,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAA;SAElD;aAAM,IAAI,KAAK,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,EAAC;SAEzC;IACH,CAAC;CAED\"}","code":"export class tasks {\r\n    static upgradeTask(creep) {\r\n        creep.checkDeath();\r\n        if (creep.carry.energy == creep.carryCapacity) {\r\n            creep.memory.working = \"true\";\r\n        }\r\n        if (creep.carry.energy == 0) {\r\n            creep.memory.working = \"false\";\r\n        }\r\n        if (creep.carry.energy != creep.carryCapacity && creep.memory.working == \"false\") {\r\n            creep.getEnergy(true, true);\r\n        }\r\n        if (creep.carryCapacity != 0 && creep.memory.working == \"true\") {\r\n            if (creep.upgradeController(creep.room.controller) == ERR_NOT_IN_RANGE) {\r\n                creep.travelTo(creep.room.controller);\r\n            }\r\n        }\r\n    }\r\n    static repairTask(creep) {\r\n        creep.checkDeath(creep);\r\n        if (creep.carry.energy == creep.carryCapacity) {\r\n            creep.memory.working = \"true\";\r\n        }\r\n        if (creep.memory.working == \"false\") {\r\n            creep.getEnergy(true, true);\r\n        }\r\n        if (creep.carry.energy == 0) {\r\n            creep.memory.working = \"false\";\r\n        }\r\n        if (creep.carry.energy != 0 && creep.memory.working == \"true\") {\r\n            let structure = Game.getObjectById(creep.memory.task.details.target);\r\n            if (structure.needsRepair() == false || structure.needsRepair() == null) {\r\n                creep.shakeTask();\r\n            }\r\n            else if (creep.repair(structure) == ERR_NOT_IN_RANGE && structure != undefined) {\r\n                creep.travelTo(structure);\r\n            }\r\n        }\r\n    }\r\n    static harvestTask(creep) {\r\n        creep.checkDeath();\r\n        var taskSource = Game.getObjectById(creep.memory.task.details.target);\r\n        if (creep.carry.energy == 0) {\r\n            creep.memory.working = \"true\";\r\n        }\r\n        if (creep.memory.working == \"false\") {\r\n            creep.findDeliveryTarget();\r\n        }\r\n        if (creep.carry.energy != creep.carryCapacity && creep.memory.working == \"true\") {\r\n            if (creep.harvest(taskSource) == ERR_NOT_IN_RANGE) {\r\n                creep.travelTo(taskSource);\r\n            }\r\n        }\r\n        else if (creep.carry.energy == creep.carryCapacity && creep.memory.working == \"true\") {\r\n            creep.memory.working = \"false\";\r\n        }\r\n    }\r\n    static buildTask(creep) {\r\n        creep.checkDeath();\r\n        if (creep.memory.working == \"false\") {\r\n            creep.getEnergy(true, true);\r\n        }\r\n        else if (creep.memory.working == \"true\") {\r\n            var creepTask = creep.memory.task.details.target;\r\n            var creepTarget = Game.getObjectById(creepTask);\r\n            if (creepTarget != null) {\r\n                if (creep.build(creepTarget) == ERR_NOT_IN_RANGE) {\r\n                    creep.travelTo(creepTarget);\r\n                }\r\n            }\r\n            else {\r\n                console.log(creep.name + \", Target is nowhere to be found. Removing task\");\r\n                creep.shakeTask();\r\n            }\r\n        }\r\n        if (creep.carry.energy == creep.carryCapacity && creep.memory.working == \"false\") {\r\n            creep.memory.working = \"true\";\r\n        }\r\n        else if (creep.carry.energy == 0 && creep.memory.working == \"true\") {\r\n            creep.memory.working = \"false\";\r\n        }\r\n    }\r\n    static lorryTask(creep) {\r\n        creep.checkDeath(creep);\r\n        if (creep.memory.task != null || creep.memory.task != undefined) {\r\n            let container = creep.memory.task.details.target;\r\n            if (creep.memory.working == \"false\") {\r\n                creep.containerCollection();\r\n            }\r\n            if (creep.carry.energy == creep.carryCapacity && creep.memory.working == \"false\") {\r\n                creep.memory.working = \"true\";\r\n            }\r\n            if (creep.carry.energy == 0 && creep.memory.working == \"true\") {\r\n                creep.memory.working = \"false\";\r\n            }\r\n            if (creep.memory.working == \"true\") {\r\n                creep.findDeliveryTarget();\r\n            }\r\n        }\r\n    }\r\n    static minerTask(creep) {\r\n        creep.checkDeath(creep);\r\n        if (creep.memory.task != null || creep.memory.task != undefined) {\r\n            let container = creep.memory.task.details.target;\r\n            let sourceId = creep.memory.task.details.sourceId;\r\n            var source = Game.getObjectById(sourceId);\r\n            var thisContainer = Game.getObjectById(container);\r\n            if (thisContainer != null) {\r\n                if (creep.pos != thisContainer.pos) {\r\n                    creep.travelTo(thisContainer);\r\n                }\r\n                if (creep.harvest(source) == ERR_NOT_IN_RANGE) {\r\n                    creep.travelTo(thisContainer);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    static attackTask(creep) {\r\n        creep.checkDeath();\r\n        if (creep.memory.working == \"false\") {\r\n            var creepTask = creep.memory.task.details.target;\r\n        }\r\n        else if (creep.memory.working == \"true\") {\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=tasks.js.map"}
