{"map":"{\"version\":3,\"file\":\"taskManager.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/TaskManager/taskManager.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAC,KAAK,EAAC,MAAM,mBAAmB,CAAC;AAExC,MAAM;IAGL,gCAAgC;IAGhC,MAAM,CAAC,GAAG;QACP,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACzC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAChC,IAAI,CAAC,MAAM,CAAC,eAAe,GAAG,EAAE,CAAC;QACnC,CAAC,CAAC,CAAA;QACF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACzC,IAAI,KAAK,GAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;YACpC,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,EAAE;gBAC7B,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;aACjD;iBAAM,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,SAAS,EAAE;gBAC9C,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;aACzB;iBAAM,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,OAAO,EAAE;gBAC5C,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;aACvB;iBAAM,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,SAAS,EAAE;gBAC9C,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aAC1B;iBAAM,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,QAAQ,EAAE;gBAC7C,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;aACzB;iBAAM,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,gBAAgB,EAAE;gBACrD,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aACxB;iBAAM,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,QAAQ,EAAE;gBAC7C,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aACxB;QACH,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,MAAM,CAAC,WAAW;QAChB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACzC,IAAI,IAAI,GAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACpC,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,IAAI,CAAC,EAAE;gBAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC3D,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAA;oBAC5C,IAAI,KAAK,GAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAA;oBAC3C,IAAI,KAAK,IAAI,IAAI,EAAE;wBACjB,IAAI,KAAK,CAAC,QAAQ,IAAI,IAAI,EAAE;4BAC1B,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;4BACnD,yDAAyD;4BACzD,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;yBAE1B;qBACF;iBACF;aACF;QACH,CAAC,CAAC,CAAA;IACN,CAAC;CAEA\"}","code":"import { tasks } from \"TaskManager/tasks\";\r\nexport class taskManager {\r\n    // var tasks = require('tasks');\r\n    static run() {\r\n        Object.keys(Game.rooms).forEach(roomName => {\r\n            var room = Game.rooms[roomName];\r\n            room.memory.availableCreeps = [];\r\n        });\r\n        Object.keys(Game.creeps).forEach(creepId => {\r\n            var creep = Game.creeps[creepId];\r\n            if (creep.memory.task == null) {\r\n                creep.room.memory.availableCreeps.push(creep.id);\r\n            }\r\n            else if (creep.memory.task.name == \"HARVEST\") {\r\n                tasks.harvestTask(creep);\r\n            }\r\n            else if (creep.memory.task.name == \"BUILD\") {\r\n                tasks.buildTask(creep);\r\n            }\r\n            else if (creep.memory.task.name == \"UPGRADE\") {\r\n                tasks.upgradeTask(creep);\r\n            }\r\n            else if (creep.memory.task.name == \"REPAIR\") {\r\n                tasks.repairTask(creep);\r\n            }\r\n            else if (creep.memory.task.name == \"CONTAINER_MINE\") {\r\n                tasks.minerTask(creep);\r\n            }\r\n            else if (creep.memory.task.name == \"LORRYS\") {\r\n                tasks.lorryTask(creep);\r\n            }\r\n        });\r\n    }\r\n    static assignTasks() {\r\n        Object.keys(Game.rooms).forEach(roomName => {\r\n            var room = Game.rooms[roomName];\r\n            if (room.memory.availableCreeps.length != 0) {\r\n                for (var i = 0; i < room.memory.availableCreeps.length; i++) {\r\n                    var creepId = room.memory.availableCreeps[i];\r\n                    var creep = Game.getObjectById(creepId);\r\n                    if (creep != null) {\r\n                        if (creep.spawning != true) {\r\n                            var task = creep.room.filtertask(creep.memory.type);\r\n                            //console.log(\"FILTERED TASK\" + task + creep.memory.type)\r\n                            creep.memory.task = task;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=taskManager.js.map"}
